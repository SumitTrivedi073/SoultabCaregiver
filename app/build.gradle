apply plugin: 'com.android.application'


ext.playCustomRingback = {
    def playCustomRingback = System.getenv("playCustomRingback")

    if (playCustomRingback == null) {
        logger.log(LogLevel.INFO, "Could not locate playCustomRingback environment variable. " +
                "Trying local.properties")
        Properties properties = new Properties()
        if (project.rootProject.file('local.properties').exists()) {
            properties.load(project.rootProject.file('local.properties').newDataInputStream())
            playCustomRingback = properties.getProperty('playCustomRingback')
        }
    }

    if (playCustomRingback == null) {
        playCustomRingback = false
    }

    return playCustomRingback
}
android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.soultabcaregiver"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 5
        versionName "1.4"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            buildConfigField("boolean", "playCustomRingback", "${playCustomRingback()}")
        }
        debug {
            buildConfigField("boolean", "playCustomRingback", "${playCustomRingback()}")
        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            def appName = "Soultab CaregiverDev07-06-2021"
            outputFileName = appName + ".apk"
        }
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'com.google.android.material:material:1.3.0'

    implementation 'com.android.volley:volley:1.2.0'
    implementation 'com.google.code.gson:gson:2.8.7'

    // Font size
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.intuit.ssp:ssp-android:1.0.6'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
//    /*Sinch library*/
//    implementation(name: 'sinch-android-rtc', version: '+', ext: 'aar')

    // [Sendbird Chat]
    implementation 'com.sendbird.sdk:sendbird-android-sdk:3.0.165'
    implementation 'org.jsoup:jsoup:1.11.2'


    // [Sendbird Calls]
    implementation 'com.sendbird.sdk:sendbird-calls:1.6.1'

    // GSON
    implementation 'com.google.code.gson:gson:2.8.7'

    /*Circle image view*/
    implementation 'de.hdodenhof:circleimageview:3.0.1'

    /*date picker*/
    implementation 'com.wdullaer:materialdatetimepicker:2.5.0'

    /*get countrycode from phone number*/
    implementation 'com.googlecode.libphonenumber:libphonenumber:7.0'


    //project import
    implementation project(':countrypicker')

    //Firebase
    implementation 'com.google.android.gms:play-services-location:18.0.0'
    implementation 'com.google.firebase:firebase-messaging:21.1.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.1'
    implementation platform('com.google.firebase:firebase-bom:26.8.0')
    implementation 'com.google.firebase:firebase-analytics'

    //Charts
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.3'

    //Twilio Voice call
    implementation "com.twilio:audioswitch:1.1.2"
    implementation "com.twilio:voice-android:5.8.0"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"

    implementation 'com.vanniktech:emoji-google:0.7.0'

}
apply plugin: 'com.google.gms.google-services'
